# -*- coding: utf-8 -*-
"""06-pandas

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CqDroVRWKW8osrLDXf2BJvk0o3YBewNi
"""

# !pip install pandas

import pandas as pd


df_estudiantes =  pd.read_csv('./estudiantes.csv') # leer un archivo csv -> DataFrame

df_estudiantes

# df_estudiantes.head() # muestra los primeros 5 registros -> tail
# df_estudiantes.info() # muestra información de la composicion de los datos
# df_estudiantes.describe() # muestra información estadística de los datos
df_estudiantes.shape # muestra la cantidad de registros y columnas

# filtado de datos

df_estudiantes[ df_estudiantes.ciudad == 'Tegucigalpa' ]

# - loc -> filtrar en base a una clave / condición
# - iloc -> filtrar en base al indices
# - reset_index -> reinicia los indices en un DF

estudiantes_tgu = df_estudiantes.loc[df_estudiantes.ciudad == 'Tegucigalpa', ['nombre', 'edad','promedio','carrera'] ].reset_index()

estudiantes_tgu

estudiantes_tgu.iloc[ 0:30 , : ]['promedio'].max()

# agrupacion

df_estudiantes.groupby('carrera')['edad'].mean().sort_values(ascending=False)

df_estudiantes.groupby('nombre')['nombre'].value_counts()

# df_estudiantes[df_estudiantes.nombre == 'Ana']

# df_estudiantes.loc[df_estudiantes.promedio <=65 ,:]

# df_estudiantes = df_estudiantes.drop(df_estudiantes[df_estudiantes.promedio <=65].index)
df_estudiantes.drop(df_estudiantes[df_estudiantes.promedio <=65].index, inplace=True)

# axis = 1 -> elimino una columna
# axis = 0 (default) -> elimina una fila, hace falta hacer refencia al indice o indices que quiero eliminar

df_estudiantes.drop('edad', axis=1)

df_estudiantes.drop(df_estudiantes.iloc[65:70].index, inplace=True)

# df_estudiantes.iloc[65:70].index

#que carrera tiene el promedio mas alto

promedios = df_estudiantes.groupby('carrera')['promedio'].mean() # Series
promedio_mas_alto = promedios.max()
carrera = promedios.idxmax()

print(f"la carrera: {carrera} tiene el promedio mas alto: {promedio_mas_alto}")

#.sort_values(ascending=False)

#cuantos estudiantes hay por ciudad
cant_estudiantes_ciudad = df_estudiantes.groupby('ciudad')['nombre'].count()

#.rename('cantidad') -> cambia el nomrbe de la columna en el objeto Series
cant_estudiantes_ciudad_carrera = df_estudiantes.groupby(['ciudad','carrera'])['nombre'].count().rename('cantidad')

cant_estudiantes_ciudad_carrera

test = df_estudiantes.groupby('ciudad')['edad'].min()
test

df_estudiantes.idxmax()

# idx ( min o max) -> retorna para la columa(as) el indice donde se encuentra el valor las alto o bajo
indices = df_estudiantes.groupby('ciudad')['edad'].idxmin()

# y con iloc, puedo buscar dichas posiciciones
df_estudiantes.iloc[indices,[0,3,1]]